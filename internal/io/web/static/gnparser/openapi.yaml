---
openapi: 3.0.0
info:
  title: Global Names Parser API
  description: |
    `GNparser` takes a scientific name and splits it into
    structural elements.

    Scientific names can be represented in many different
    variants. For example "Homo sapiens" exists as

    - Homo sapiens
    - Homo sapiens Linn.
    - Homo sapiens L. 1758
    - Homo sapiens Linnaeus, 1758

    As a result comparing names from different
    sources is hard. Parsing allows to extract the most
    conservative element from all these cases - "Homo sapiens".

    Most common use-cases for scientific names parsing are

    - Getting the simplest possible canonical form.
    - Quickly sort names by their "cardinality" (uninomial, binomial etc.).
    - Normalize name-string to a "standard" form.
    - Check if names contain syntactic mistakes.
    - Find semantic meaning of every word in a name.

    The `GNparser` code and documentation is
    located at https://github.com/gnames/gnparser.

    For more examples see
    [test_data.md](https://github.com/gnames/gnparser/blob/master/testdata/test_data.md)
  contact:
    name: Dmitry Mozzherin
    url: https://github.com/dimus
    email: dmozzherin@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 1.6.9
servers:
- url: https://parser.globalnames.org/api/v1
  description: '`GNparser` production service'
paths:
  /{names}:
    get:
      summary: parses scientific names via HTTP using GET method
      description: |
        Makes it possible to break scientific names into
        their semantic components.
      operationId: parseSciNames
      parameters:
      - name: names
        in: path
        description: Pass scientific names separated by a pipe `|` character
        required: true
        style: simple
        explode: false
        schema:
          type: string
          example: Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a|Bubo bubo
      - name: with_details
        in: query
        description: Returns more detailed parsed data.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      - name: cultivars
        in: query
        description: |
          Takes in account botanical cultivars for generating
          canonical forms, normalized version and cardinality of
          a name.
        schema:
          type: boolean
          example: false
      - name: csv
        in: query
        description: |
          Returns data in CSV format. If it is set to
          true, `with_details` flag is ignored.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
          example: false
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                example:
                - parsed: true
                  quality: 2
                  qualityWarnings:
                  - quality: 2
                    warning: Year with latin character
                  verbatim: Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
                  normalized: Pleurosigma vitrea var. kjellmanii H. Peragallo 1891
                  canonical:
                    stemmed: Pleurosigma uitre kiellmani
                    simple: Pleurosigma vitrea kjellmanii
                    full: Pleurosigma vitrea var. kjellmanii
                  cardinality: 3
                  authorship:
                    verbatim: H.Peragallo, 1891a
                    normalized: H. Peragallo 1891
                    year: "1891"
                    authors:
                    - H. Peragallo
                  id: f6a5b47b-9917-5a48-b0ff-366bc036ae9c
                  parserVersion: v1.3.0
                - parsed: true
                  quality: 1
                  verbatim: Bubo bubo
                  normalized: Bubo bubo
                  canonical:
                    stemmed: Bubo bub
                    simple: Bubo bubo
                    full: Bubo bubo
                  cardinality: 2
                  id: 4431a0f3-e901-519a-886f-9b97e0c99d8e
                  parserVersion: v1.3.0
                items:
                  $ref: '#/components/schemas/Parsed'
            text/csv:
              schema:
                type: string
              example: |
                Id,Verbatim,Cardinality,CanonicalStem,CanonicalSimple,CanonicalFull,Authorship,Year,Quality
                f6a5b47b-9917-5a48-b0ff-366bc036ae9c,"Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a",3,Pleurosigma uitre kiellmani,Pleurosigma vitrea kjellmanii,Pleurosigma vitrea var. kjellmanii,H. Peragallo 1891,1891,2
                4431a0f3-e901-519a-886f-9b97e0c99d8e,Bubo bubo,2,Bubo bub,Bubo bubo,Bubo bubo,,,1
  /:
    post:
      summary: Parses scientific names via HTTP using POST method.
      description: |
        Makes it possible to break scientific names into
        their semantic components.
      requestBody:
        description: Includes parsing options and a list of names.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Input'
            example:
              names:
              - Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
              - Bubo bubo
              withDetails: true
              csv: false
      responses:
        "200":
          description: Parsed results come in the same order as the input names.
          content:
            application/json:
              schema:
                type: array
                example:
                - parsed: true
                  quality: 2
                  qualityWarnings:
                  - quality: 2
                    warning: Year with latin character
                  verbatim: Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
                  normalized: Pleurosigma vitrea var. kjellmanii H. Peragallo 1891
                  canonical:
                    stemmed: Pleurosigma uitre kiellmani
                    simple: Pleurosigma vitrea kjellmanii
                    full: Pleurosigma vitrea var. kjellmanii
                  cardinality: 3
                  authorship:
                    verbatim: H.Peragallo, 1891a
                    normalized: H. Peragallo 1891
                    year: "1891"
                    authors:
                    - H. Peragallo
                  id: f6a5b47b-9917-5a48-b0ff-366bc036ae9c
                  parserVersion: v1.3.0
                - parsed: true
                  quality: 1
                  verbatim: Bubo bubo
                  normalized: Bubo bubo
                  canonical:
                    stemmed: Bubo bub
                    simple: Bubo bubo
                    full: Bubo bubo
                  cardinality: 2
                  id: 4431a0f3-e901-519a-886f-9b97e0c99d8e
                  parserVersion: v1.3.0
                items:
                  $ref: '#/components/schemas/Parsed'
            text/csv:
              schema:
                type: string
              example: |
                Id,Verbatim,Cardinality,CanonicalStem,CanonicalSimple,CanonicalFull,Authorship,Year,Quality
                f6a5b47b-9917-5a48-b0ff-366bc036ae9c,"Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a",3,Pleurosigma uitre kiellmani,Pleurosigma vitrea kjellmanii,Pleurosigma vitrea var. kjellmanii,H. Peragallo 1891,1891,2
                4431a0f3-e901-519a-886f-9b97e0c99d8e,Bubo bubo,2,Bubo bub,Bubo bubo,Bubo bubo,,,1
components:
  schemas:
    Input:
      required:
      - names
      type: object
      properties:
        names:
          type: array
          description: A list of scientific names to parse.
          example:
          - Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
          - Bubo bubo
          items:
            type: string
        withDetails:
          type: boolean
          description: When true, parsed responses contain more details.
          example: false
        withCultivars:
          type: boolean
          description: When true, botanical cultivars are supported.
          example: false
        csv:
          type: boolean
          description: When true, the CSV output is used, `withDetails` is ignored.
          example: false
    Parsed:
      required:
      - cardinality
      - id
      - parseQuality
      - parsed
      - parserVersion
      - verbatim
      type: object
      properties:
        parsed:
          type: boolean
          description: If true, parsing did succeed.
          example: true
        quality:
          type: integer
          description: |
            Quality of parsing.

            - 0 - name-string is not parseable
            - 1 - no parsing problems encountered
            - 2 - small parsing problems
            - 3 - serious parsing problems
            - 4 - severe problems, name could not be parsed completely

            The quality is equal to the quality of the most
            severe warning (see qualityWarnings). If no problems
            are encountered, and the parsing succeeded, the parseQuality
            is set to 1. If parsing failed, the parseQuality is 0.
          example: 2
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
        qualityWarnings:
          type: array
          description: Contains encountered parsing problems.
          example:
          - quality: 2
            warning: Year with latin character
          items:
            $ref: '#/components/schemas/QualityWarning'
        verbatim:
          type: string
          description: Input name-string without modifications.
          example: Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
        normalized:
          type: string
          description: A normalized version of the input name-string.
          example: Pleurosigma vitrea var. kjellmanii H. Peragallo 1891
        canonical:
          $ref: '#/components/schemas/Canonical'
        cardinality:
          type: integer
          description: |
            Allows to sort, partition names according to number of elements
            in their canonical forms. If botanical cultivars are allowed,
            their cultivar epithets are taken into account.

            0 - cardinality cannot be calculated
            1 - uninomial
            2 - binomial
            3 - trinomial
            4 - quadrinomial
          example: 3
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
        authorship:
          $ref: '#/components/schemas/Authorship'
        bacteria:
          type: string
          description: |
            The field is provided if a name has a genus
            that is registered as bacterial. Possible
            values are

            - maybe - if the genus has homonyms in other groups
            - yes - if `GNparser` dictionary does not detect any homonyms

            The bacterial names often contain strain information which are
            not parseable and are placed into the "tail" field.
          enum:
          - maybe
          - "yes"
        virus:
          type: boolean
          description: |
            Is set to true in case if name is not parsed, and probably
            belongs to a wide variety of sub-cellular entities like

            - viruses
            - plasmids
            - prions
            - RNA
            - DNA

            Viruses are the vast majority in this group of names,
            as a result they gave (very imprecise) name to
            the field.

            We do plan to create a parser for viruses at some point,
            which will expand this group into more precise categories.
        hybrid:
          type: string
          description: |
            Is given if a name is detected as one of the hybrids

            - a non-categorized hybrid
            - named hybrid
            - notho- hybrid
            - hybrid formula
          example: NAMED_HYBRID
          enum:
          - HYBRID
          - NAMED_HYBRID
          - HYBRID_FORMULA
          - NOTHO_HYBRID
        surrogate:
          type: string
          description: |
            This is a wide category of names that do not follow
            nomenclatural rules

            - a non-catogorized surrogates
            - surrogate names from BOLD project
            - comparisons (Homo cf. sapiens)
            - approximations (names for specimen that not fully identified)
          example: APPROXIMATION
          enum:
          - SURROGATE
          - COMPARISON
          - APPROXIMATION
          - BOLD_SURROGATE
        tail:
          type: string
          description: |
            Unparseable tail of a name. It might contain "junk", annotations,
            malformed parts of a scientific name,
            taxonomic concept indications, bacterial strains etc.
            If there is an unparseable tail, the quality of the name-parsing
            is set to the worst category.
        details:
          description: |
            Provided only if "with_details=true"
            Details of a scientific name.
          oneOf:
          - $ref: '#/components/schemas/DetailsUninomial'
          - $ref: '#/components/schemas/DetailsSpecies'
          - $ref: '#/components/schemas/DetailsInfraspecies'
          - $ref: '#/components/schemas/DetailsComparison'
          - $ref: '#/components/schemas/DetailsApproximation'
          - $ref: '#/components/schemas/DetailsHybridFormula'
        words:
          type: array
          description: meaning and position of every parsed word.
          items:
            $ref: '#/components/schemas/Word'
        id:
          type: string
          description: |
            An UUID v5 generated from the input string using "globalnames.org"
            DNS domain name as a seed. This UUID can be used as
            a distributed global unique identifier of the string and
            can be created independently in any popular programming language.
          format: uuid
          example: f6a5b47b-9917-5a48-b0ff-366bc036ae9c
        version:
          type: string
          description: version of `GNparser`
          example: v1.3.0
      example:
        parsed: true
        quality: 2
        qualityWarnings:
        - quality: 2
          warning: Year with latin character
        verbatim: Pleurosigma vitrea var. kjellmanii H.Peragallo, 1891a
        normalized: Pleurosigma vitrea var. kjellmanii H. Peragallo 1891
        canonical:
          stemmed: Pleurosigma uitre kiellmani
          simple: Pleurosigma vitrea kjellmanii
          full: Pleurosigma vitrea var. kjellmanii
        cardinality: 3
        authorship:
          verbatim: H.Peragallo, 1891a
          normalized: H. Peragallo 1891
          year: "1891"
          authors:
          - H. Peragallo
          originalAuth:
            authors:
            - H. Peragallo
            year:
              year: "1891"
        details:
          infraspecies:
            genus: Pleurosigma
            species: vitrea
            infraspecies:
            - value: kjellmanii
              rank: var.
              authorship:
                verbatim: H.Peragallo, 1891a
                normalized: H. Peragallo 1891
                year: "1891"
                authors:
                - H. Peragallo
                originalAuth:
                  authors:
                  - H. Peragallo
                  year:
                    year: "1891"
        words:
        - verbatim: Pleurosigma
          normalized: Pleurosigma
          wordType: GENUS
          start: 0
          end: 11
        - verbatim: vitrea
          normalized: vitrea
          wordType: SPECIES
          start: 12
          end: 18
        - verbatim: var.
          normalized: var.
          wordType: RANK
          start: 19
          end: 23
        - verbatim: kjellmanii
          normalized: kjellmanii
          wordType: INFRASPECIES
          start: 24
          end: 34
        - verbatim: H.
          normalized: H.
          wordType: AUTHOR_WORD
          start: 35
          end: 37
        - verbatim: Peragallo
          normalized: Peragallo
          wordType: AUTHOR_WORD
          start: 37
          end: 46
        - verbatim: 1891a
          normalized: "1891"
          wordType: YEAR
          start: 48
          end: 53
        id: f6a5b47b-9917-5a48-b0ff-366bc036ae9c
        parserVersion: v0.14.4-37-g5eb244b
    QualityWarning:
      required:
      - quality
      - warning
      type: object
      properties:
        warning:
          type: string
          description: |
            A sentence that describes an encountered
            parsing problem.
          example: Year with latin character
        quality:
          type: integer
          description: |
            A parse quality associated with the warning.

            - 0 - name-string is not parseable
            - 1 - no parsing problems encountered
            - 2 - small parsing problems
            - 3 - serious parsing problems
            - 4 - severe problems, name could not be parsed completely
          example: 2
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
      description: |
        Explains an encountered parsing problem.
    Canonical:
      required:
      - full
      - simple
      - stemmed
      type: object
      properties:
        stemmed:
          type: string
          description: |
            The most "normalized" and simplified version of the name.
            Species epithets are stripped of suffixes,
            "j" character converted to "i",
            "v" character converted to "u" according to
            "Schinke R, Greengrass M, Robertson AM and Willett P (1996)"

            It is most useful to match names when a variability
            in suffixes is possible.
          example: Pleurosigma uitre kiellmani
        simple:
          type: string
          description: |
            A simplified version of a name where some elements like
            ranks, or hybrid signs "×" are omitted (hybrid signs are
            present for hybrid formulas).

            It is most useful to match names in general.
          example: Pleurosigma vitrea kjellmanii
        full:
          type: string
          description: |
            A canonical form that keeps hybrid signs "×" for named
            hybrids and shows infra-specific ranks.

            It is most useful for detection of the best matches from
            multiple results. It is also recommended for displaying
            canonical forms of botanical names.
          example: Pleurosigma vitrea var. kjellmanii
      description: |
        Simplified versions of a name-string more suitable for
        matching and comparing name-strings than the verbatim version.
    Authorship:
      required:
      - normalized
      - verbatim
      type: object
      properties:
        verbatim:
          type: string
          description: |
            An authorship string without modifications
          example: H.Peragallo, 1891a
        normalized:
          type: string
          description: |
            An authorship string normalized by `GNparser`
          example: H. Peragallo 1891
        year:
          type: string
          description: |
            A string representing a year of original description
            of the name. The year number is surrounded by parentheses
            "(1758)", in cases when a year is approximate.
          example: "1891"
        authors:
          type: array
          description: |
            List of all authors detected in the authorship
          example:
          - H. Peragallo
          items:
            type: string
        original:
          $ref: '#/components/schemas/AuthorGroup'
        combination:
          $ref: '#/components/schemas/AuthorGroup'
      description: |
        Describes provided meta-information about authors of a name.
        Sometimes authorship is provided for several elements of a
        name, for example in
        "Agalinis purpurea (L.) Briton var. borealis (Berg.) Peterson 1987"

        The authorship provided outside of "details" section belongs to
        the most fine-grained element of a name ("var. borealis" for
        the example above).
    AuthorGroup:
      required:
      - authors
      type: object
      properties:
        authors:
          type: array
          example:
          - H. Peragallo
          items:
            type: string
        year:
          $ref: '#/components/schemas/Year'
        exAuthors:
          $ref: '#/components/schemas/Authors'
        emendAuthors:
          $ref: '#/components/schemas/Authors'
      description: |
        Provided only if "with_details=true"
        Group of authors belonging to a particular nomenclatural event.
        We distinguish to possible situations when AuthorGroup is used.

        - original - authors of the original description of a name
        - combination - authors of a new combination, rank etc.
    Year:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: a normalized year as a string.
          example: "1891"
        isApproximate:
          type: boolean
          description: The flag is true when the given year is not certain.
          example: false
      description: |
        Provided only if "with_details=true"
        Year of publication. If a range of the
        years provided, the start year is kept,
        with isApproximate flag set to true.
    Authors:
      required:
      - authors
      type: object
      properties:
        authors:
          type: array
          description: A list of detected authors.
          example:
          - H. Peragallo
          items:
            type: string
        year:
          $ref: '#/components/schemas/Year'
      description: |
        Provided only if "with_details=true"
        A "special" group of authors, that sometimes appear in
        scientific names after "ex" or "emend." qualifiers.
    DetailsUninomial:
      required:
      - uninomial
      type: object
      properties:
        uninomial:
          $ref: '#/components/schemas/DetailsUninomial_uninomial'
      description: Details for uninomial names
      example: |
        "uninomial": {
          "uninomial": "Tribuloideae",
          "rank": "subfam.",
          "parent": "Zygophyllaceae",
          "authorship": {
            "verbatim": "D.M.Porter",
            "normalized": "D. M. Porter",
            "authors": [
              "D. M. Porter"
            ],
            "originalAuth": {
              "authors": [
                "D. M. Porter"
              ]
            }
          }
        }
    DetailsSpecies:
      required:
      - species
      type: object
      properties:
        species:
          $ref: '#/components/schemas/DetailsSpecies_species'
      description: Details for binomial names
      example: |
        "species": {
          "genus": "Pycnodonte",
          "subgenus": "Notostrea",
          "species": "tarda"
        }
    DetailsInfraspecies:
      required:
      - infraspecies
      type: object
      properties:
        infraspecies:
          $ref: '#/components/schemas/DetailsInfraspecies_infraspecies'
      description: Details for multinomial names
      example: |
        "infraspecies": {
          "genus": "Pleurosigma",
          "species": "vitrea",
          "infraspecies": [ {
              "value": "kjellmanii",
              "rank": "var.",
              "authorship": {
                "verbatim": "H.Peragallo, 1891a",
                "normalized": "H. Peragallo 1891",
                "year": "1891",
                "authors": [
                  "H. Peragallo"
                ],
                "originalAuth": {
                  "authors": [
                    "H. Peragallo"
                  ],
                  "year": {
                    "year": "1891"
                  }
                }
              }
            }
          ]
        }
    DetailsComparison:
      required:
      - comparison
      type: object
      properties:
        comparison:
          $ref: '#/components/schemas/DetailsComparison_comparison'
      description: Details for binomial surrogate names with comparison
      example: |
        "comparison": {
          "genus": "Melanella",
          "species": "polita",
          "comparisonMarker": "cf."
        }
    DetailsApproximation:
      required:
      - approximation
      type: object
      properties:
        approximation:
          $ref: '#/components/schemas/DetailsApproximation_approximation'
      description: Details for surrogate names with
      example: |
        "approximation": {
          "genus": "Pleistophora",
          "approximationMarker": "sp.",
          "ignored": " 2 CHU"
        }
    DetailsHybridFormula:
      required:
      - hybridFormula
      type: object
      properties:
        hybridFormula:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/DetailsUninomial'
            - $ref: '#/components/schemas/DetailsSpecies'
            - $ref: '#/components/schemas/DetailsInfraspecies'
      description: Details for hybrid formula names
      example: |
        "hybridFormula": [
          {
            "species": {
              "genus": "Stanhopea",
              "species": "tigrina"
            }
          },
          {
            "species": {
              "genus": "Stanhopea",
              "species": "ecornuta"
            }
          }
        ]
    Word:
      required:
      - end
      - normalized
      - start
      - verbatim
      - wordType
      type: object
      properties:
        verbatim:
          type: string
          description: The value of the word unchanged.
          example: var
        normalized:
          type: string
          description: The value of the word normalized by parser.
          example: var.
        wordType:
          type: string
          description: Semantic meaning of the word.
          example: RANK
          enum:
          - APPROXIMATE_YEAR
          - APPROXIMATION_MARKER
          - AUTHOR_WORD
          - AUTHOR_WORD_FILIUS
          - COMPARISON_MARKER
          - CULTIVAR
          - GENUS
          - HYBRID_CHAR
          - INFRASPECIES
          - INFRA_GENUS
          - RANK
          - SPECIES
          - UNINOMIAL
          - WORD
          - YEAR
        start:
          type: integer
          description: The index of the first UTF-8 character of the word.
          example: 19
        end:
          type: integer
          description: The index of the end of the word.
          example: 22
      description: Semantic meaning and a position of a word in a name.
      example: |
        {
          "verbatim": "var",
          "normalized": "var.",
          "wordType": "RANK",
          "start": 19,
          "end": 22
        }
    DetailsUninomial_uninomial:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: uninomial name.
          example: Tribuloideae
        cultivar:
          type: string
          description: cultivar epithet for botanical cultivars.
          example: ‘Ace of Spades’
        rank:
          type: string
          description: |
            sometimes uninomial names contain their parent, for example
            "Zygophyllaceae subfam. Tribuloideae D.M.Porter".
            This field contains rank depicted in such name-strings
            "subfam." in the example.
          example: subfam.
        parent:
          type: string
          description: |
            sometimes uninomial names contain their parent, for example
            "Zygophyllaceae subfam. Tribuloideae D.M.Porter".
            This field contains the parent depicted in such name-strings
            "Zygophyllaceae" in the example.
          example: Zygophyllaceae
        authorship:
          $ref: '#/components/schemas/Authorship'
    DetailsSpecies_species:
      required:
      - genus
      - species
      type: object
      properties:
        genus:
          type: string
          description: genus in a binomial name
          example: Pycnodonte
        subgenus:
          type: string
          description: subgenus in a binomial name
          example: Notostrea
        species:
          type: string
          description: specific epithet of a binomial name
          example: tarda
        cultivar:
          type: string
          description: cultivar epithet of a botanical cultivar
          example: ‘Ace of Spades’
        authorship:
          $ref: '#/components/schemas/Authorship'
    DetailsInfraspecies_infraspecies_infraspecies:
      required:
      - value
      type: object
      properties:
        value:
          type: string
          description: Infra-specific epithet
          example: kjellmanii
        rank:
          type: string
          description: Infra-specific rank
          example: var.
        authorship:
          $ref: '#/components/schemas/Authorship'
    DetailsInfraspecies_infraspecies:
      required:
      - genus
      - species
      type: object
      properties:
        genus:
          type: string
          description: Genus in a bionomial name
          example: Pleurosigma
        subgenus:
          type: string
          description: Subgenus in a binomial name
        species:
          type: string
          description: Specific epithet of a binomial name
          example: vitrea
        cultivar:
          type: string
          description: Cultivar epithet of a botanical cultivar
        authorship:
          $ref: '#/components/schemas/Authorship'
        infraspecies:
          type: array
          description: Infra-specific epithets
          items:
            $ref: '#/components/schemas/DetailsInfraspecies_infraspecies_infraspecies'
    DetailsComparison_comparison:
      required:
      - comparisonMarker
      - genus
      type: object
      properties:
        genus:
          type: string
          description: genus in a binomial name
          example: Melanella
        species:
          type: string
          description: specific epithet of a binomial name
          example: polita
        authorship:
          $ref: '#/components/schemas/Authorship'
        comparisonMarker:
          type: string
          description: Comparison abbreviation, usually "cf."
          example: cf.
    DetailsApproximation_approximation:
      required:
      - approximationMarker
      - genus
      type: object
      properties:
        genus:
          type: string
          description: genus in a binomial name
          example: Pleistophora
        species:
          type: string
          description: specific epithet of a binomial name
        authorship:
          $ref: '#/components/schemas/Authorship'
        comparisonMarker:
          type: string
          description: Approximation term, for example "sp., spp., aff."
          example: sp.
        ignored:
          type: string
          description: Ignored part of approximation name.
          example: ' 2 CHU'
